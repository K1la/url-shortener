services:
  shortener:
    build: .
    command: ./shortener
    container_name: url_shortener
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    env_file:
      - .env
    networks:
      - app-network

  db:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/000001_create_notifications.up.sql:/docker-entrypoint-initdb.d/001_create_notifications.sql:ro
    networks:
      - app-network

  redis:
    image: redis:7.2-alpine
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - app-network


volumes:
  postgres_data:
  redis:

networks:
  app-network:
